"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1139],{7811:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=s(4848),t=s(8453);const r={},a="API Keys",o={id:"simulation/settings/namespace/api-keys/index",title:"API Keys",description:"API keys are unique identifiers that serve as a security mechanism for",source:"@site/docs/simulation/settings/namespace/api-keys/index.md",sourceDirName:"simulation/settings/namespace/api-keys",slug:"/simulation/settings/namespace/api-keys/",permalink:"/droid-docs/simulation/settings/namespace/api-keys/",draft:!1,unlisted:!1,editUrl:"https://github.com/triton-droids/droid-docs/tree/main/docs/simulation/settings/namespace/api-keys/index.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Recovering access",permalink:"/droid-docs/simulation/settings/account/mfa/recovery-access"},next:{title:"Using API Keys",permalink:"/droid-docs/simulation/settings/namespace/api-keys/use"}},c={},d=[{value:"Important Considerations",id:"important-considerations",level:2}];function l(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"api-keys",children:"API Keys"})}),"\n",(0,i.jsxs)(n.p,{children:["API keys are unique identifiers that serve as a security mechanism for\naccessing an API. They are essential for controlling access to resources and\nensuring that only authorized users or applications can make requests. Each API\nkey is linked to a specific ",(0,i.jsx)(n.a,{href:"/droid-docs/simulation/namespaces/",children:"namespace"})," and\ngrants permissions based on the ",(0,i.jsx)(n.a,{href:"/droid-docs/simulation/settings/namespace/members/roles",children:"role"})," assigned to it. API\nkeys are particularly useful for:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration with Third-Party Applications"}),": Allowing external applications\nto securely interact with your API."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automated Processes and Scripts"}),": Enabling automated systems to perform\nactions on behalf of users without manual intervention."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/droid-docs/simulation/settings/namespace/members/",children:"Members"})," can create API keys only if their role is higher\nthan ",(0,i.jsx)(n.em,{children:"observer"}),". Additionally, any API key created must have the same or lower\nrole than that of the member who created it. API keys can also have an optional\nexpiration date, which can be set to 30, 60, 90, or 365 days after creation and\n",(0,i.jsx)(n.strong,{children:"cannot"})," be reset."]}),"\n",(0,i.jsxs)(n.p,{children:["Each API key is internally identified by a UUID, which is only returned upon\ncreation and, for security purposes, ",(0,i.jsx)(n.strong,{children:"cannot"})," be retrieved later. The\nexternal identifier for the API key is a unique name."]}),"\n",(0,i.jsx)(n.h2,{id:"important-considerations",children:"Important Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security"}),": Keep API keys confidential. Avoid exposing them in publicly\naccessible code repositories or client-side applications. Consider using\nenvironment variables or secure vaults for storage."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Expiration"}),": Setting an expiration date on API keys enhances security by\nensuring that keys are regularly rotated, limiting the potential damage from a\ncompromised key."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);