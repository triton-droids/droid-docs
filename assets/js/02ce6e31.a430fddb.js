"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8382],{3322:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>t,metadata:()=>r,toc:()=>d});var a=s(4848),i=s(8453);const t={},o="Namespaces",r={id:"simulation/namespaces/index",title:"Namespaces",description:"Namespaces in ShellHub provide a structured and collaborative environment",source:"@site/docs/simulation/namespaces/index.md",sourceDirName:"simulation/namespaces",slug:"/simulation/namespaces/",permalink:"/droid-docs/simulation/namespaces/",draft:!1,unlisted:!1,editUrl:"https://github.com/triton-droids/droid-docs/tree/main/docs/simulation/namespaces/index.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Creating Firewall Rules",permalink:"/droid-docs/simulation/firewall/create"},next:{title:"Switching Between Namespaces",permalink:"/droid-docs/simulation/namespaces/switching"}},c={},d=[];function l(e){const n={a:"a",h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"namespaces",children:"Namespaces"})}),"\n",(0,a.jsx)(n.p,{children:"Namespaces in ShellHub provide a structured and collaborative environment\ndesigned to streamline the management of devices, firewall rules, SSH keys, and\nmore. At the core of ShellHub\u2019s platform, namespaces promote efficient, secure,\nand isolated resource management, enabling teams or components to operate\nindependently while remaining accessible for team collaboration."}),"\n",(0,a.jsxs)(n.p,{children:["Each user must belong to at least one namespace, where resources are shared and\norganized. Within namespaces, users can become\n",(0,a.jsx)(n.a,{href:"/droid-docs/simulation/settings/namespace/members/",children:"members"})," and have roles and\npermissions tailored to their access needs. This enables collaborative\nmanagement of devices and configurations while upholding robust security."]}),"\n",(0,a.jsx)(n.p,{children:"Namespaces enhance security by enforcing firewall rules, such as blocking\nspecific IPs, disabling root authentication, or limiting connections to\npredefined users. Additionally, private/public SSH keys can strengthen\nconnection security within namespaces, adding another layer of control over\naccess."}),"\n",(0,a.jsxs)(n.p,{children:["Automation is also a key feature in namespaces. ",(0,a.jsx)(n.a,{href:"/droid-docs/simulation/settings/namespace/api-keys/",children:"API\nkeys"})," allow secure, programmatic\naccess for integration and scripting. These API keys make it easier to automate\ntasks like device updates, firewall rule adjustments, and SSH key management,\nensuring seamless operations."]}),"\n",(0,a.jsx)(n.p,{children:"To help manage large device fleets, tags offer a flexible way to categorize\ndevices within a namespace. Tags allow users to organize and retrieve devices\nbased on specific criteria, simplifying device management by enabling quick\nidentification, updating, or monitoring of grouped devices."})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var a=s(6540);const i={},t=a.createContext(i);function o(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);